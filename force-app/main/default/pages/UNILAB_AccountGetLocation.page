<apex:page standardController="Account" showHeader="false">

    <apex:includeScript value="/soap/ajax/30.0/connection.js" />
    <apex:includeScript value="https://maps.google.com/maps/api/js?region=PH&key=AIzaSyC9-zGiP6OJELmlrajcoLhcbbvCyZSN8n4" />
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"
    />

    <script>
        sforce.connection.sessionId = "{!$Api.Session_ID}";
        var c = new sforce.SObject("Account");
        c.Id = '{!Account.Id}';

        if (navigator.geolocation) {
            //browser support geolocation 
            navigator.geolocation.getCurrentPosition(callbackSuccess,
                callbackError, {
                    enableHighAccuracy: true,
                    timeout: 30000
                });

        } else {
            alert('Browser not supported for getting location!');
            redirectBackToRecord();
        }

        function callbackSuccess(position) {

            //get latitude and longitude ********window.opener.location.href="/"+c.Id;
            var lat = position.coords.latitude;
            var lon = position.coords.longitude;

            c.Latitude__c = lat;
            c.Longitude__c = lon;

            sforce.connection.update([c]);
            //window.top.location.href="/"+c.Id;

            getAddressFromGeocode(c.Longitude__c, c.Latitude__c);

        }

        function callbackError(error) {
            switch (error.code) {
                case error.UNKNOWN_ERROR:
                    alert("Unknown Error");
                    redirectBackToRecord();
                    break;
                case error.PERMISSION_DENIED:
                    alert("Permission Denied");
                    redirectBackToRecord();
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("Coordinates not available");
                    redirectBackToRecord();
                    break;
                case error.TIMEOUT:
                    alert(
                        "System Time-out, please make sure location is enabled."
                    );
                    redirectBackToRecord();
                    break;
            }
        }

        function getAddressFromGeocode(long, lat) {
            var geocoder = new google.maps.Geocoder();
            var coordinates = new google.maps.LatLng(lat, long);
            var address1 = "";
            var address2 = "";
            var premise = "";
            var street_number = "";
            var route = "";
            var postal_code = "";
            var region = "";
            var province = "";
            var city = "";
            var municipality = "";
            geocoder.geocode({
                location: coordinates
            }, function(results, status) {
                if (status === 'OK') {
                    // 3 is used because any other result after the 3rd index is basically garbage.
                    for (var i = 0; i < 3; i++) {

                        for (var j = 0; j < results[i].address_components
                            .length; j++) {
                            var components_by_type = {};
                            var tempComponent = results[i].address_components[
                                j];
                            components_by_type[tempComponent.types[0]] =
                                tempComponent;

                            if (premise.length == 0) {
                                if (components_by_type.premise != null) {
                                    premise = components_by_type.premise
                                        .long_name;
                                } else if (components_by_type.establishment !=
                                    null) {
                                    premise = components_by_type.establishment
                                        .long_name;
                                }
                            }

                            if (street_number.length == 0) {
                                if (components_by_type.street_number !=
                                    null) {
                                    street_number = components_by_type.street_number
                                        .short_name;
                                }
                            }

                            if (route.length == 0) {
                                if (components_by_type.route != null) {
                                    route = components_by_type.route.long_name;
                                }
                            }

                            if (postal_code.length == 0) {
                                if (components_by_type.postal_code !=
                                    null) {
                                    postal_code = components_by_type.postal_code
                                        .short_name;
                                }
                            }

                            if (municipality.length == 0) {
                                if (components_by_type.neighborhood !=
                                    null) {
                                    municipality = components_by_type.neighborhood
                                        .long_name;
                                } else if (components_by_type.administrative_area_level_5 !=
                                    null) {
                                    municipality = components_by_type.administrative_area_level_5
                                        .long_name;
                                }
                            }

                            if (city.length == 0) {
                                if (components_by_type.locality != null) {
                                    city = components_by_type.locality.long_name;
                                } else if (components_by_type.administrative_area_level_3 !=
                                    null) {
                                    city = components_by_type.administrative_area_level_3
                                        .long_name;
                                }
                            }

                            if (province.length == 0) {
                                if (components_by_type.administrative_area_level_2 !=
                                    null) {
                                    province = components_by_type.administrative_area_level_2
                                        .long_name;
                                    
                                }
                            }

                            if (region.length == 0) {
                                if (components_by_type.administrative_area_level_1 !=
                                    null) {
                                    region = components_by_type.administrative_area_level_1
                                        .long_name;
                                }
                            }
                        }
                    }

                    address1 = premise + ", " + street_number +
                        ", " + route;
                    address2 = municipality + ", " + city;
                    var trimmedAddress1 = address1.replace(
                        /(^[,\s]+)|([,\s]+$)/g, "");
                    var trimmedAddress2 = address2.replace(
                        /(^[,\s]+)|([,\s]+$)/g, "");

                    c.Zip_Code__c = postal_code;
                    c.Account_Address_1_Bldg_No_Street__c =
                        trimmedAddress1;
                    c.Account_Address_2_District_Brgy__c =
                        trimmedAddress2;
                    c.Territory_Town_City_Municipality__c = city;
                    c.District__c = city;
                    c.Province__c = province;
                    c.Region__c = region;
                    c.Area__c = region;
                    sforce.connection.update([c]);
                }

                redirectBackToRecord();
            });
        }

        function redirectBackToRecord() {
            if ((typeof sforce != 'undefined') && sforce && (!!sforce.one)) {
                // Salesforce app navigation
                sforce.one.navigateToSObject(c.Id);
            } else {
                // Set the window's URL using a Visualforce expression
                window.top.location.href = "/" + c.Id;
            }
        }

    </script>
    Getting location.
    <!--
    <apex:form >
        <apex:commandLink action="{!cancel}" value="Click Here to return"/>
    </apex:form>-->

</apex:page>